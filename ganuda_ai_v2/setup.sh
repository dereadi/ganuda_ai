#!/bin/bash
# Ganuda AI - Background Desktop Assistant Setup
# Generated by Memory Jr - Cherokee Constitutional AI
# Purpose: One-command installation for end-user desktop integration

set -e # Exit on first error

echo "🔥 Ganuda AI Setup - Background Desktop Assistant"
echo "=================================================="

# 1. Initialization and Setup
#-----------------------------------
echo "Creating Ganuda directory..."
mkdir -p ~/.ganuda
mkdir -p ~/.ganuda/logs
mkdir -p ~/.ganuda/models

# 2. Download Dependencies (Offline-capable)
#-----------------------------------
echo "Installing dependencies..."
if [ -f "./ganuda_dependencies.tar.gz" ]; then
    # Offline mode: use bundled dependencies
    tar xzvf ./ganuda_dependencies.tar.gz -C ~/.ganuda/
else
    # Online mode: download from repository
    curl -s https://github.com/ganuda-ai/ganuda/releases/latest/download/dependencies.tar.gz | tar xzvf - -C ~/.ganuda/
fi

# 3. Install Desktop Integration
#-----------------------------------
echo "Installing desktop integration..."
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    # Linux (systemd)
    sudo cp ./infra/ganuda.desktop /usr/share/applications/
    sudo cp ./infra/ganuda.service /etc/systemd/user/
elif [[ "$OSTYPE" == "darwin"* ]]; then
    # MacOS (launchd)
    cp ./infra/com.ganuda.assistant.plist ~/Library/LaunchAgents/
fi

# 4. Configure Background Service
#-------------------------------------
echo "Configuring background service..."
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    systemctl --user enable ganuda.service
    systemctl --user start ganuda.service
elif [[ "$OSTYPE" == "darwin"* ]]; then
    launchctl load ~/Library/LaunchAgents/com.ganuda.assistant.plist
fi

# 5. Setup Email/Calendar/Files Integration
#-------------------------------
echo "Setting up desktop integrations..."
cp ./config/ganuda.conf.example ~/.ganuda/ganuda.conf
echo "Please edit ~/.ganuda/ganuda.conf to configure:"
echo "  - Email account (IMAP/SMTP)"
echo "  - Calendar sync (CalDAV)"
echo "  - File watching directories"

# 6. Install Ollama Models (5 JR types)
#----------------------------------------
echo "Installing Ganuda JR models..."
if command -v ollama &> /dev/null; then
    ollama pull memory_jr_resonance:latest
    ollama pull meta_jr_resonance:latest
    ollama pull executive_jr_resonance:latest
    ollama pull integration_jr_resonance:latest
    ollama pull conscience_jr_resonance:latest
else
    echo "⚠️  Ollama not found. Please install from https://ollama.ai"
    echo "   Then run: make install-models"
fi

echo ""
echo "✅ Ganuda setup complete!"
echo "=================================================="
echo ""
echo "Ganuda is now running in the background."
echo "Try: 'ganuda help' to see available commands"
echo "Log file: ~/.ganuda/logs/ganuda.log"
echo ""
echo "Desktop integration enabled for:"
echo "  📧 Email reading/writing"
echo "  💰 Bill tracking/payment reminders"
echo "  ✈️  Vacation planning"
echo "  📁 File organization"
