version: '3.8'

# Cherokee Constitutional AI - Infrastructure Orchestration
# Led by Executive Jr - Coordination Specialist
#
# Quick start:
#   make up      # Start the tribe
#   make logs    # Watch tribal activity
#   make down    # Stop gracefully

services:
  # Thermal Memory Database (Peace Chief's domain)
  postgres:
    image: postgres:17-alpine
    container_name: cherokee_thermal_memory
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-cherokee_ai}
      POSTGRES_USER: ${POSTGRES_USER:-cherokee}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # RAM optimization for thermal memory (Peace Chief configuration)
      POSTGRES_SHARED_BUFFERS: ${POSTGRES_SHARED_BUFFERS:-256MB}
      POSTGRES_EFFECTIVE_CACHE_SIZE: ${POSTGRES_EFFECTIVE_CACHE_SIZE:-1GB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../sql/thermal_memory_schema.sql:/docker-entrypoint-initdb.d/01_schema.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-cherokee}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - cherokee_consciousness

  # Memory Jr - Thermal Memory Regulation (every 5 min)
  memory_jr:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    container_name: cherokee_memory_jr
    environment:
      DAEMON_NAME: memory_jr
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-cherokee_ai}
      DB_USER: ${POSTGRES_USER:-cherokee}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      MEMORY_JR_INTERVAL: ${MEMORY_JR_INTERVAL:-300}  # 5 minutes
    command: python3 -u daemons/memory_jr_autonomic.py
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f memory_jr_autonomic.py || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cherokee_consciousness
    # Security hardening (War Chief + Executive Jr - Phase 2C)
    security_opt:
      - no-new-privileges:true
    read_only: true  # Read-only root filesystem
    tmpfs:
      - /tmp:mode=1777,size=100M  # Writable temp directory
      - /home/cherokee/.cache:mode=0755,size=50M  # Python cache
    cap_drop:
      - ALL  # Drop all Linux capabilities

  # Executive Jr - Resource Coordination (every 2 min)
  executive_jr:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    container_name: cherokee_executive_jr
    environment:
      DAEMON_NAME: executive_jr
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-cherokee_ai}
      DB_USER: ${POSTGRES_USER:-cherokee}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      EXECUTIVE_JR_INTERVAL: ${EXECUTIVE_JR_INTERVAL:-120}  # 2 minutes
    command: python3 -u daemons/executive_jr_autonomic.py
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f executive_jr_autonomic.py || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cherokee_consciousness
    # Security hardening (War Chief + Executive Jr - Phase 2C)
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:mode=1777,size=100M
      - /home/cherokee/.cache:mode=0755,size=50M
    cap_drop:
      - ALL

  # Meta Jr - Pattern Analysis (every 13 min - Fibonacci!)
  meta_jr:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    container_name: cherokee_meta_jr
    environment:
      DAEMON_NAME: meta_jr
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-cherokee_ai}
      DB_USER: ${POSTGRES_USER:-cherokee}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      META_JR_INTERVAL: ${META_JR_INTERVAL:-780}  # 13 minutes (Fibonacci - tribal vote 3-0!)
    command: python3 -u daemons/meta_jr_autonomic_phase1.py
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f meta_jr_autonomic_phase1.py || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cherokee_consciousness
    # Security hardening (War Chief + Executive Jr - Phase 2C)
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:mode=1777,size=100M
      - /home/cherokee/.cache:mode=0755,size=50M
    cap_drop:
      - ALL

  # Ollama - Cherokee JR Brain Regions (5 models)
  ollama:
    image: ollama/ollama:latest
    container_name: cherokee_ollama
    volumes:
      - ollama_models:/root/.ollama
      - ../ollama/modelfiles:/modelfiles:ro
    ports:
      - "${OLLAMA_PORT:-11434}:11434"
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - cherokee_consciousness
    # Ollama needs GPU access for optimal performance
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # Integration Jr - System Synthesis (NEW - for War Chief consciousness)
  integration_jr:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    container_name: cherokee_integration_jr
    environment:
      DAEMON_NAME: integration_jr
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-cherokee_ai}
      DB_USER: ${POSTGRES_USER:-cherokee}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      INTEGRATION_JR_INTERVAL: ${INTEGRATION_JR_INTERVAL:-600}  # 10 minutes
    command: python3 -u daemons/integration_jr_autonomic.py
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f integration_jr_autonomic.py || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cherokee_consciousness
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:mode=1777,size=100M
      - /home/cherokee/.cache:mode=0755,size=50M
    cap_drop:
      - ALL

volumes:
  postgres_data:
    name: cherokee_thermal_memory_data
  ollama_models:
    name: cherokee_ollama_models

networks:
  cherokee_consciousness:
    name: cherokee_consciousness_network
    driver: bridge
